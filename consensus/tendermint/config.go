// Copyright 2017 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package tendermint

import (
	"sync"

	"github.com/clearmatics/autonity/common"
)

type ProposerPolicy uint64

const (
	RoundRobin ProposerPolicy = iota
	Sticky
	Tendermint
)

type Config struct {
	RequestTimeout uint64         `toml:",omitempty"` // The timeout for each Istanbul round in milliseconds.
	BlockPeriod    uint64         `toml:",omitempty"` // Default minimum difference between two consecutive block's timestamps in second
	ProposerPolicy ProposerPolicy `toml:",omitempty"` // The policy for proposer selection
	Epoch          uint64         `toml:",omitempty"` // The number of blocks after which to checkpoint and reset the pending votes
	Deployer       common.Address `toml:",omitempty"` // Address of the validator who deploys contract stored in bytecode
	Bytecode       string         `toml:",omitempty"` // Bytecode of validators contract // would like this type to be []byte but the unmarshalling is not working
	ABI            string         `toml:",omitempty"` // Json ABI of the contract

	sync.RWMutex
}

var DefaultConfig = &Config{
	RequestTimeout: 10000,
	BlockPeriod:    1,
	ProposerPolicy: Tendermint,
	Epoch:          30000,
	Deployer:       common.HexToAddress("0x1336000000000000000000000000000000000000"),
	Bytecode:       "608060405234801561001057600080fd5b506040516107843803806107848339810180604052610032919081019061012c565b60005b8151811015610093576000828281518110151561004e57fe5b6020908102919091018101518254600180820185556000948552929093209092018054600160a060020a031916600160a060020a039093169290921790915501610035565b50506101ba565b60006100a682516101ae565b9392505050565b6000601f820183136100be57600080fd5b81516100d16100cc8261018e565b610168565b915081818352602084019350602081019050838560208402820111156100f657600080fd5b60005b83811015610122578161010c888261009a565b84525060209283019291909101906001016100f9565b5050505092915050565b60006020828403121561013e57600080fd5b81516001604060020a0381111561015457600080fd5b610160848285016100ad565b949350505050565b6040518181016001604060020a038111828210171561018657600080fd5b604052919050565b60006001604060020a038211156101a457600080fd5b5060209081020190565b600160a060020a031690565b6105bb806101c96000396000f3006080604052600436106100615763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631af60f72811461006657806335aa2e44146100885780636a7a7b9e146100be578063b7ab4db5146100de575b600080fd5b34801561007257600080fd5b5061008661008136600461045c565b610100565b005b34801561009457600080fd5b506100a86100a3366004610482565b61027e565b6040516100b59190610536565b60405180910390f35b3480156100ca57600080fd5b506100866100d936600461045c565b6102a6565b3480156100ea57600080fd5b506100f3610393565b6040516100b5919061054a565b60003381805b6000548110156101555782600160a060020a031660008281548110151561012957fe5b600091825260209091200154600160a060020a0316141561014d5760019150610155565b600101610106565b811515610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061055b565b60405180910390fd5b6000546001106101a657600080fd5b600093505b6000548410156102775784600160a060020a03166000858154811015156101ce57fe5b600091825260209091200154600160a060020a0316141561026c576000805460001981019081106101fb57fe5b60009182526020822001548154600160a060020a0390911691908690811061021f57fe5b60009182526020822001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091558054906102669060001983016103f6565b50610277565b6001909301926101ab565b5050505050565b600080548290811061028c57fe5b600091825260209091200154600160a060020a0316905081565b336000805b6000548110156102fa5782600160a060020a03166000828154811015156102ce57fe5b600091825260209091200154600160a060020a031614156102f257600191506102fa565b6001016102ab565b811515610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061055b565b5050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03939093169290921790915550565b606060008054806020026020016040519081016040528092919081815260200182805480156103eb57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103cd575b505050505090505b90565b81548183558181111561041a5760008381526020902061041a91810190830161041f565b505050565b6103f391905b808211156104395760008155600101610425565b5090565b60006104498235610575565b9392505050565b600061044982356103f3565b60006020828403121561046e57600080fd5b600061047a848461043d565b949350505050565b60006020828403121561049457600080fd5b600061047a8484610450565b6104a981610575565b82525050565b60006104ba82610571565b8084526020840193506104cc8361056b565b60005b828110156104fc576104e28683516104a0565b6104eb8261056b565b6020969096019591506001016104cf565b5093949350505050565b601881527f566f746572206973206e6f7420612076616c696461746f720000000000000000602082015260400190565b6020810161054482846104a0565b92915050565b6020808252810161044981846104af565b6020808252810161054481610506565b60200190565b5190565b600160a060020a0316905600a265627a7a723058205f81cd52dd12f18b7f19e75d72d9de5854ba26340f120c54ee2982235f7b56826c6578706572696d656e74616cf50037",
	ABI:            `[{"constant":false,"inputs":[{"name":"_validator","type":"address"}],"name":"RemoveValidator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"validators","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_validator","type":"address"}],"name":"AddValidator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getValidators","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_validators","type":"address[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]`,
}

func (cfg *Config) SetProposerPolicy(p ProposerPolicy) {
	cfg.Lock()
	cfg.ProposerPolicy = p
	cfg.Unlock()
}

func (cfg *Config) GetProposerPolicy() ProposerPolicy {
	cfg.RLock()
	defer cfg.RUnlock()
	return cfg.ProposerPolicy
}
