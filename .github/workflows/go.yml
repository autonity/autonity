name: Go
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make autonity

      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Set LATEST_COMMIT
        run: |
          echo "##[set-env name=LATEST_COMMIT;]$(git log -n 1 origin/master --pretty=format:"%H")"
        shell: bash
  tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install
        run: go run build/ci.go install

      - name: unit tests
        run: go run build/ci.go test -coverage $TEST_PACKAGES

      - name: success_test_e2e
        run: go test -v ./consensus/tendermint/... -timeout 30m -cover -covermode=atomic -test.coverprofile=tendermint1.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint1.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage.out

  start_stop_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test2
        run: go test ./consensus/test/... -v -run='TestTendermintSuccess|TestTendermintOneMalicious|TestTendermintSlowConnections|TestTendermintLongRun|TestTendermintStartStopSingleNode|TestTendermintStopUpToFNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint2.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint2.cov

  race_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: unit
        run: go test -race -v ./consensus/tendermint/... -timeout 30m -cover -covermode=atomic -test.coverprofile=tendermint3.cov

      - name: e2e
        run: go test ./consensus/test/... -v -run 'TestTendermintSuccess' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint4.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint3.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint4.cov

  autonity_test:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestCheckBlockWithSmallFee
        run: go test ./consensus/test/... -v -run 'TestCheckBlockWithSmallFee' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint5.cov

      - name: TestCheckFeeRedirectionAndRedistribution
        run: go test ./consensus/test/... -v -run 'TestCheckFeeRedirectionAndRedistribution' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint6.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint5.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint6.cov

  start_stop_test1:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestTendermintStartStopFNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint7.cov

      - name: TestTendermintStartStopFPlusTwoNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFPlusTwoNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint8.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint7.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint8.cov

  start_stop_test2:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestTendermintStartStopFPlusOneNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFPlusOneNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint9.cov

      - name: TestTendermintStartStopAllNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopAllNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=tendermint10.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint9.cov

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tendermint10.cov

  coverage-reports:
    needs: [start_stop_test2, start_stop_test1, autonity_test, race_tests, start_stop_tests, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage
        uses: actions/download-artifact@v1
        with:
          name: coverage

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }}
          file: ./coverage/tendermint*
          flags: tendermint
          yml: ./codecov.yml

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }}
          file: ./coverage/coverage.out
          yml: ./codecov.yml

  contract_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '9.x'

      - name: install truffle
        run: npm install -g truffle
      - name: install ganache
        run: npm install -g ganache-cli
      - name: run ganache
        run: ganache-cli --gasLimit=0x1fffffffffffff --allowUnlimitedContractSize -e 1000000000 &
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: test contract
        run: make test-contracts

