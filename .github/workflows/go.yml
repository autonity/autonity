name: Go
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make autonity

      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Set LATEST_COMMIT
        run: |
          echo "##[set-env name=LATEST_COMMIT;]$(git log -n 1 origin/master --pretty=format:"%H")"
        shell: bash
  tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install
        run: go run build/ci.go install

      - name: unit tests
        run: go run build/ci.go test -coverage $TEST_PACKAGES

      - name: success_test_e2e
        run: go test -v ./consensus/tendermint/... -timeout 30m -cover -covermode=atomic -test.coverprofile=coverage_tendermint.cov

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_tendermint.cov #optional
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage.out
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  start_stop_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test2
        run: go test ./consensus/test/... -v -run='TestTendermintSuccess|TestTendermintOneMalicious|TestTendermintSlowConnections|TestTendermintLongRun|TestTendermintStartStopSingleNode|TestTendermintStopUpToFNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage_start_stop.cov

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_start_stop.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  race_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: unit
        run: go test -race -v ./consensus/tendermint/... -timeout 30m -cover -covermode=atomic -test.coverprofile=coverage_tendermint.cov

      - name: e2e
        run: go test ./consensus/test/... -v -run 'TestTendermintSuccess' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage.out

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage.out
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_tendermint.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  autonity_test:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestCheckBlockWithSmallFee
        run: go test ./consensus/test/... -v -run 'TestCheckBlockWithSmallFee' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage_tenderming.cov

      - name: TestCheckFeeRedirectionAndRedistribution
        run: go test ./consensus/test/... -v -run 'TestCheckFeeRedirectionAndRedistribution' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage.cov

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_tenderming.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  start_stop_test1:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestTendermintStartStopFNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage.cov

      - name: TestTendermintStartStopFPlusTwoNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFPlusTwoNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage_many.cov

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_many.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  start_stop_test2:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: TestTendermintStartStopFPlusOneNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopFPlusOneNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage_tendermint.cov

      - name: TestTendermintStartStopAllNodes
        run: go test ./consensus/test/... -v -run 'TestTendermintStartStopAllNodes' -timeout 40m -coverpkg=./... -cover -covermode=atomic -test.coverprofile=coverage_all.cov

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_tendermint.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }} #required
          file: ./coverage_all.cov
          flags: tendermint #optional
          yml: ./codecov.yml #optional
          fail_ci_if_error: false #optional (default = false)

  contract_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '9.x'

      - name: install truffle
        run: npm install -g truffle
      - name: install ganache
        run: npm install -g ganache-cli
      - name: run ganache
        run: ganache-cli --gasLimit=0x1fffffffffffff --allowUnlimitedContractSize -e 1000000000 &
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: test contract
        run: make test-contracts

