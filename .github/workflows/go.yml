name: Go
on: [push]
jobs:
  bootstrap:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Cache code
        uses: actions/cache@v1
        id: cache-code
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Check out code into the Go module directory
        if: steps.cache-code.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          clean: 'false'

      - name: Cache git modules
        uses: actions/cache@v1
        id: cache-git-modules
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: conformance tests
        if: steps.cache-git-modules.outputs.cache-hit != 'true'
        run: git submodule update --init --recursive

      - name: Cache golang modules
        uses: actions/cache@v1
        id: cache-golang-modules
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: gomod
        if: steps.cache-golang-modules.outputs.cache-hit != 'true'
        run: go mod download

  build:
    needs: bootstrap
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build
        run: make autonity

      - name: Install
        run: go run build/ci.go install

  linters:
    needs: bootstrap
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Linters
        run: |
          git fetch --no-tags --depth=1 origin develop:develop
          make lint-ci
        shell: bash

  tests:
    needs: bootstrap
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install
        run: go run build/ci.go install

      - name: unit tests
        run: go test -p 1 -timeout 30m -short -covermode=atomic -cover -test.coverprofile=coverage.out $(go list ./... | grep -v /consensus/tendermint)

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }}
          file: coverage*.out
          yml: codecov.yml
          flags: autonity
          name: autonity
          fail_ci_if_error: true

  tests-tendermint:
    needs: tests
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: success_test_e2e
        run: go test -v ./consensus/tendermint/... -timeout 30m -cover -covermode=atomic -test.coverprofile=coverage_tendermint.out

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.codecov_upload }}
          file: coverage_tendermint.out
          flags: tendermint
          name: tendermint
          yml: codecov.yml
          fail_ci_if_error: true

  tendermint_e2e_tests:
    needs: bootstrap
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    strategy:
      matrix:
        e2e: [TestCheckFeeRedirectionAndRedistribution,
                TestCheckBlockWithSmallFee,
                TestRemoveFromValidatorsList,
                TestContractUpgrade_Success,
                TestContractUpgradeSeveralUpgrades,
                TestContractUpgradeSeveralUpgradesOnBusTopology,
                TestContractUpgradeSeveralUpgradesOnStarTopology,
                TestTendermintSuccess,
                TestTendermintSlowConnections,
                TestTendermintMemoryLeak,
                TestTendermintLongRun,
                TestTendermintTC7,
                TestTendermintOneMalicious,
                TestTendermintNoQuorum,
                TestTendermintStopUpToFNodes,
                TestTendermintStartStopSingleNode,
                TestTendermintStartStopFNodes,
                TestTendermintStartStopFPlusOneNodes,
                TestTendermintStartStopFPlusTwoNodes,
                TestTendermintStartStopAllNodes,
                TestResolve,
                TestTendermintStarSuccess,
                TestTendermintStarOverParticipantSuccess,
                TestTendermintBusSuccess,
                TestTendermintChangeTopologyFromBusToStarSuccess,
                TestTendermintChangeTopologyFromStarToBusSuccess,
                TestTendermintAddConnectionToTopologySuccess,
                TestTendermintAddValidatorsToTopologySuccess,
                TestTendermintAddParticipantsToTopologySuccess,
                TestTendermintAddStakeholdersToTopologySuccess
        ]

    name: Tendermint ${{ matrix.e2e }} test

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Test
        run: go test ./consensus/test/... -v -run='${{ matrix.e2e }}' -timeout 40m

  race_tests:
    needs: bootstrap
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GORACE: "history_size=7"
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set GOPATH
        # temporary fix
        # see https://github.com/actions/setup-go/issues/14
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        shell: bash

      - name: Cache code
        uses: actions/cache@v1
        env:
          cache-name: cache-code
        with:
          path: /home/runner/work/autonity/autonity/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache git modules
        uses: actions/cache@v1
        env:
          cache-name: cache-git-modules
        with:
          path: /home/runner/work/autonity/autonity/tests/testdata
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache golang modules
        uses: actions/cache@v1
        env:
          cache-name: cache-golang-modules
        with:
          path: /home/runner/work/autonity/autonity/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: unit
        run: go test -race -v ./consensus/tendermint/... -timeout 30m

  contract_tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '9.x'

      - name: install truffle
        run: npm install -g truffle
      - name: install ganache
        run: npm install -g ganache-cli
      - name: run ganache
        run: ganache-cli --gasLimit=0x1fffffffffffff --allowUnlimitedContractSize -e 1000000000 &
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: test contract
        run: make test-contracts
