engineVersion: 3.0.1
playbook:
  name: "Example playbook of E2E testing of Autonity consensus."
  stop: false  # true to stop this playbook, false to keep this playbook be run by test engine.
  testcases:
    - name: "TC-12: Network partition. 6 break into 3 and 3, then the two slices recovers, engine recovers too."
      condition:
        crashNodes: [] # contain the node domain name we want to crash.
        scenario:
          - delay: 2 # on the 10th second, disconnect peers.
            action: "disconnect" # it apply p2p disconnection by managing ip-tables in linux kernel.
            peers: [[4, 0], [4, 1], [4, 2], [5, 0], [5, 1], [5, 2], [3, 0], [3, 1], [3, 2]]
          - delay: 45 # on the 30th second, connect peers.
            action: "connect" # it apply p2p disconnection by managing ip-tables in linux kernel.
            peers: [[4, 0], [4, 1], [4, 2], [5, 0], [5, 1], [5, 2], [3, 0], [3, 1], [3, 2]]
      input:
        duration: 300 # num of seconds the transaction sending duration.
        senderNode: 2  # node coin_base address will be used as default sender address.
        receiverNode: 1  # node coin_base address wil be used as default receiver address.
        amountperTX: 10 # 10 tokens to be transfer per transaction.
      output:
        # In any case, engine should promise block consistent between nodes, and correct balance for each account.
        engineAlive: true # false means consensus engine should on-hold.